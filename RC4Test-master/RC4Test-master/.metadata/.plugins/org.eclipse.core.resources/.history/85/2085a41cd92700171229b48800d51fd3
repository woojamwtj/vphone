package com.tman.stream;

import java.io.File;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.io.FileInputStream;
import java.io.FileOutputStream;

public class FileEncAndDec {
	//int x=1+(int)(Math.random()*50)
    private static int numOfEncAndDec = 3456; //加密解密秘钥
    private static int dataOfFile = 0; //文件字节内容
    private static ArrayList<Integer> list = new ArrayList<Integer>();
    public static void main(String[] args) {

        File srcFile = new File("/Users/caojingkun/Desktop/桌面.png"); //初始文件
        File encFile = new File("/Users/caojingkun/Desktop/encFile.tif"); //加密文件
        File decFile = new File("/Users/caojingkun/Desktop/decFile.png"); //解密文件
        //getArray(100);
        try {
            //EncFile(srcFile, encFile); //加密操作
        	DecFile(encFile, decFile);
        } catch (Exception e) {
            e.printStackTrace();
        }  
    }
    
    private static void getArray(Integer integer){
    	for(int i=0;i<integer;i++) {
    		int x = 1+(int)(Math.random()*100);
    		list.add(x);
    		System.out.println(x+"   ");
    	}
    }

    private static void EncFile(File srcFile, File encFile) throws Exception {
        if(!srcFile.exists()){
            System.out.println("source file not exixt");
            return;
        }
        
        if(!encFile.exists()){
            System.out.println("encrypt file created");
            encFile.createNewFile();
        }
        InputStream fis  = new FileInputStream(srcFile);
        OutputStream fos = new FileOutputStream(encFile);
        
        int i=0;
        while ((dataOfFile = fis.read()) > -1) {
        	if(i>2000000)
            fos.write(dataOfFile^numOfEncAndDec);
        	else fos.write(dataOfFile^300);
            i++;
		}
		System.out.println(i+"");
        
        fis.close();
        fos.flush();
        fos.close();
    }
    
    //4176587
	private static void DecFile(File encFile, File decFile) throws Exception {
		if (!encFile.exists()) {
			System.out.println("encrypt file not exixt");
			return;
		}

		if (!decFile.exists()) {
			System.out.println("decrypt file created");
			decFile.createNewFile();
		}

		InputStream fis = new FileInputStream(encFile);
		OutputStream fos = new FileOutputStream(decFile);

		int i=0;
		while ((dataOfFile = fis.read()) > -1) {
			if(i>2000000)
	            fos.write(dataOfFile^numOfEncAndDec);
	        	else fos.write(dataOfFile^300);
	        i++;
		}
		System.out.println(i+"");

		fis.close();
		fos.flush();
		fos.close();
	}
}
